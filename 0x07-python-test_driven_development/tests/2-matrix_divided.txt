==================================
Test cases for 2-matrix_divided.py
==================================

This library has a function that divides all elements of a matrix.
The list must have same size, and each element must be int or 
float, div argument must be int and not 0

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [[1, 2, 3], [4, 5, 6]]

Documentation
=============
Check if our modules and functions are documented.
    >>> module_doc = __import__('2-matrix_divided').__doc__
    >>> print(len(module_doc) > 0)
    True

    >>> function_doc = __import__('2-matrix_divided').matrix_divided.__doc__
    >>> print(len(function_doc) > 0)
    True

Test cases
==========

General tests
-----------------------------
    >>> matrix = [[1, 2, 3],[4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> matrix = [[7.8, 8.7, 4.9], [9.3,10.78,3.2]]
    >>> matrix_divided(matrix, 3)
    [[2.6, 2.9, 1.63], [3.1, 3.59, 1.07]]

    >>> matrix = [[73.8, 8.7, -4], [-9,78,3.2]]
    >>> matrix_divided(matrix, 10)
    [[7.38, 0.87, -0.4], [-0.9, 7.8, 0.32]]

    >>> matrix = [[7, -8, 4.9], [9.3,78,-3.2]]
    >>> matrix_divided(matrix, -9)
    [[-0.78, 0.89, -0.54], [-1.03, -8.67, 0.36]]

    >>> matrix_divided([[3]], 5)
    [[0.6]]

    >>> matrix_divided([[3],[6]], 5)
    [[0.6], [1.2]]

    >>> matrix_divided([[-14],[-13]], -5)
    [[2.8], [2.6]]

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]] , 10 - 5)
    [[0.2, 0.4, 0.6], [0.8, 1.0, 1.2]]

    >>> matrix_divided([[1, 2, 3], [4, 5, 6]] , -100000)
    [[-0.0, -0.0, -0.0], [-0.0, -0.0, -0.0]]


Division by 0
-------------

    >>> matrix = [[7.8, 8.7, 4.9], [9.3,10.78,3.2]]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

Matrix not a list
-----------------

    >>> matrix = ([7.8, 8.7, 4.9], [9.3,10.78,3.2])
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Empty matrix
------------
    >>> matrix = []
    >>> matrix_divided(matrix, 13)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

List of non-list
----------------

    >>> matrix = [(7.8, 8.7, 4.9), [9.3,10.78,3.2]]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [[7.8, 8.7, 4.9], (9.3,10.78,3.2)]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [(7.8, 8.7, 4.9), (9.3,10.78,3.2)]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats


List of list of non integers and floats
---------------------------------------

    >>> matrix = [[7.8, "Student", 4.9], [9.3,10.78,3.2]]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [[7.8, "Student", 4.9], [9.3,10.78,"Student"]]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [[2, 3, 3], {3, 4}, [5, 6]]
    >>> matrix_divided(matrix, 13)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix_divided(None, 13)
    Traceback (most recent call last):  
    TypeError: matrix must be a matrix (list of lists) of integers/floats

List of empty lists
-------------------

    >>> matrix = [[], [], []]
    >>> matrix_divided(matrix, 15)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Matrix of uneven row size
-------------------------

    >>> matrix = [[1, 2],[4, 5, 3]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> matrix = [[1, 2, 3],[4, 5]]
    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size


Missing arguments or more than two
----------------------------------

    >>> matrix_divided(matrix, 16, 3)
    Traceback (most recent call last):
    TypeError: matrix_divided() takes 2 positional arguments but 3 were given

    
    >>> matrix_divided(matrix)
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    >>> matrix_divided()
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

    >>> matrix = [[1, 3, 4], (1, 2, 3), [1, 2, 3]]
    >>> matrix_divided(matrix, 16)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats